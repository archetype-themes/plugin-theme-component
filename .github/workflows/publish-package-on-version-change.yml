name: Publish NPM Package On New GitHub Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: latest
          registry-url: https://npm.pkg.github.com/
      - name: Clean install of NodeJS dependencies
        run: npm ci
      - name: Run Tests
        run: npm test
      - name: Check if we have a version change
        id: check-version
        run: |
          REMOTE_VERSION=$(npm view @archetype-themes/archie version) # Replace with your GitHub username or org name and package name
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          echo "NPM Repository version: $(npm pkg get name):$REMOTE_VERSION"
          echo "Current Local version:  $(npm pkg get name):$CURRENT_VERSION"
          echo ""
          
          if [ "$CURRENT_VERSION" = "$REMOTE_VERSION" ]; then
            echo "No new version. Skipping npm module publication."
            echo "::set-output name=should_publish::false"
          else
            echo "::set-output name=should_publish::true"
            echo "::set-output name=new_version::$CURRENT_VERSION"
          fi
      - name: Create Git Tag
        if: steps.check-version.outputs.should_publish == 'true'
        run: git tag ${{ steps.check-version.outputs.new_version }}

      - name: Publish Git Tag
        if: steps.check-version.outputs.should_publish == 'true'
        run: git push origin ${{ steps.check-version.outputs.new_version }}

      - name: Publish package
        if: steps.check-version.outputs.should_publish == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
